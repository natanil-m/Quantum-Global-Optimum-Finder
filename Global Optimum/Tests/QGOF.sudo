k = Null
max_func_val = absolute of maximum value of the function range (upperbound=2**(num_qubits-num_overflow_bit-1))
shift_step = 0  
max_iteration = ceil(log2(max_func_val)) # since we use binary search method maximum number of steps is log2(max_func_val)
iteration = 0
while k == Null and iteration <= max_iteration+1:
    exp_val = <Z>(MSQb(standardizer_circuit)) ///measure the expectation value of observable Z the for Most Significant Qubit of standardizer circuit
    if standardizer_threshold_lowerbound<exp_val<threshold_helper_upperbound:   //termination condition of binary search
        k = shift_step
    else:
        if (exp_val>0):  //function has more positive values so we need to shift downward
             shift_step -= int((max_func_val-abs(shift_step))/2)-1 //update parameter of binary serach
        else if (exp_val<0):  //function has more negative value
            shift_step += int((max_func_val-abs(shift_step))/2)+1 //update parameter of binary search
    iteration+=1

if(k is Null):  //if we can not find a proper k we can determine that exp_val is fluctuating between some constant values out of the threshold range, so we just need to measure the oracle to find out those values and they are global optimum 
    F(x) is near constant. Measure it to find the global optimum.
else:
    Go to the next step of the algorithm
